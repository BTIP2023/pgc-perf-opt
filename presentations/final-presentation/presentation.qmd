---
title: "Performance Evaluation and Optimization of an Unsupervised Machine Learning Workflow for Discriminating Major SARS-CoV-2 Variants in the Philippines"
author: "<b>Project Lead:</b> Mark Joseph Garrovillas, RCh </br> <b>Interns:</b> Brylle Joshua Logro√±o, John Matthew Felices, Yenzy Urson Hebron"
date: "July 28 2023"
institution: "Core Facility for Bioinformatics"
format: 
  revealjs:
    date-format: long
    slide-number: c/t
    width: 1920
    height: 1080
    theme: [default, custom.scss]
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    preview-links: auto
    slide-level: 3
    multiplex: true
    chalkboard: 
      boardmarker-width: 5
    search:
    transition: slide
    background-transition: fade
    transition-speed: slow
title-slide-attributes:
      data-background-image: presentation_files/img/PGCTitleSlideDark.svg
      data-background-size: cover
      data-background-color: "#5E205E"
      transition: slide
      background-transition: fade
      transition-speed: slow
---

# Background of the Study {background-color="#5E205E" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="fade-in slide-out" transition-speed="slow"}

## Background of the Study {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
  - Unsupervised machine learning can be used to aid in tracking variants of SARS-CoV-2
  - Optimized linear algebra libraries are designed to be improve performance by faster communication with the hardware layer
  - Patches on processor vulnerabilities such as Meltdown and Spectre have been shown to severely impact performance

# Objectives of the Study {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Improvement of a sample pipeline that discriminates between COVID19 variants using an unsupervised machine learning framework {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/journal.pone.0285719.png){.fragment fig-align="center" height=40% width=40%}

## Which linear algebra library implementation (ATLAS, BLISS, NETLIB, OPENBLAS, and IntelMLK) gives the most optimal runtime for the workflow? {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/linear-algebra.jpg){.fragment fig-align="center" height=60% width=60%}

## Does processor vulnerability mitigations (Spectre and Meltdown) significantly affect the runtime of the workflow? {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/spectre_meltdown.png){.fragment fig-align="center" height=60% width=60%}

# Improved unsupervised machine learning pipeline {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Improved Workflow summary {data-="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/pipeline-flowchart.png){.fragment fig-align="center" height=60% width=60%}

## Data Extraction: FASTA and Metadata files were extracted and cleaned from .tar files obtained from the GISAID database. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/gisaid.fasta", n=10)
p
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="900px"}

library(readr)
library(flextable)

p <- read.csv(file="presentation_files/img/gisaid.csv", nrows=5)
p_table <- flextable(p)
p_table
```

::::

:::::



## Data Preprocessing: A treemap that visualizes the distribution of the samples obtained was generated  {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/reg_var_lin.html" width=1800px height=900px></iframe>

## Data Preprocessing: Sequences and metadata of sampled data were saved for possible use in further downstream analysis {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/fasta_all_100.fasta", n=10)
p
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="900px"}

library(readr)
library(flextable)

p <- read.csv(file="presentation_files/img/metadata_all_100.csv", nrows=5)
p_table <- flextable(p)
p_table
```

::::

:::::

## k-mer analysis: k-mer frequencies can be used to represent a specific sequence for downstream profiling {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

```{r out.width="900px", out.height="450px"}

library(readr)
library(flextable)

p <- read.csv(file="presentation_files/img/kmer_3_100.csv", nrows=10)
p_table <- flextable(p)
p_table
```

## Heatmaps of k-mer tables showed no obvious differences in k-mer frequencies between samples {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

```{r out.width="1800px", out.height="900px", fig.cap="3-mer heatmap"}

load(file="presentation_files/img/heatmap-3.RData")
p
```

## Dimensional-Reduction: PCA analysis is able to reduce the number of dimensions of the highly dimensional k-mer data set using linear reduction{data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="3D Principal Components Plot for k=7"}

load(file="presentation_files/img/3d-pca-7.RData")
p
```
::::

:::::

## Dimensional Reduction: Side plots for PCA were also generated by the pipeline {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Indivgraph for k=3"}

load(file="presentation_files/img/indivgraph-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Loadings plot for PC1 (k=3)"}

load(file="presentation_files/img/loadings-1-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Screeplot for k=3"}

load(file="presentation_files/img/screeplot-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Vargraph for k=3"}

load(file="presentation_files/img/vargraph-3.RData")
p
```
::::

:::::


## Clustering Visualization: tSNE is a stochastic non-linear method that is able to visualize the highly dimensional k-mer data set in a two-dimensional plot {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="3D tSNE Plot for k=7"}

load(file="presentation_files/img/3d-tsne-7.RData")
p
```
::::

:::::

## Clustering-visualization: UMAP is a newer non-linear method that is able to the highly dimensional k-mer data set in a two-dimensional plot {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::::: {.columns}

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="3D UMAP Plot for k=7"}

load(file="presentation_files/img/3d-umap-7.RData")
p
```
::::

:::::

## Clustering-visualization: AGNES Clustering uses a "bottom-up" approach to cluster similar data points together into a dendrogram {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="Dendrogram grouping sequences by variant"}

load(file="presentation_files/img/clustering-variant-7.RData")
ggp
```
::::

:::: {.column width="50%"}
```{r out.width="900px", out.height="450px", fig.cap="Dendrogram grouping sequences by region"}

load(file="presentation_files/img/clustering-region-7.RData")
ggp
```
::::

:::::

# Insights from the plots generated by the pipeline {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Dimensional analysis results in increased clustering as k increases {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=3"}

load(file="presentation_files/img/2d-pca-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=5"}

load(file="presentation_files/img/2d-pca-5.RData")
p
```
::::

:::: {.column width="100%"}
```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```
::::


:::::


## Dimensional analysis results in increased clustering as k increases {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=3"}

load(file="presentation_files/img/2d-tsne-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=5"}

load(file="presentation_files/img/2d-tsne-5.RData")
p
```
::::

:::: {.column width="100%"}
```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```
::::

:::::

## Dimensional analysis results in increased clustering as k increases {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=3"}

load(file="presentation_files/img/2d-umap-3.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=5"}

load(file="presentation_files/img/2d-umap-5.RData")
p
```
::::

:::: {.column width="100%"}
```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```
::::

:::::

## UMAP visualization results in the most distinct clustering between variants {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```
::::

:::: {.column width="50%"}
```{r out.width="800px", out.height="400px", fig.cap="Dendrogram for k=7"}

load(file="presentation_files/img/clustering-variant-7.RData")
ggp
```
::::

:::::


# Benchmarking of the pipeline using different linear algebra libraries {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"} 

## A statistical analysis pipeline was followed for determining the significance of the results obtained for benchmarking {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

![](presentation_files/img/stats-flowchart.png){.fragment fig-align="center" height=40% width=40%}

## The use of NETLIB linear algebra library results in the best performance for PCA (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/pca-7-benchmark.html" width=1800px height=900px></iframe>

## The use of MKL linear algebra library provides the fastest runtime for t-SNE analysis (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/tsne-7-benchmark.html" width=2000px height=900px></iframe>

## The BLISS linear algebra library results in the fastest runtime for UMAP analysis (k=5) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/umap-5-benchmark.html" width=2000px height=900px></iframe>

# Benchmarking of the pipeline using different processor vulnerability mitigations {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"} 

## Benchmarking using AMD processor show that disabling mitigations can improve some and worsen some routines (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/amd.html" width=2000px height=900px></iframe>

## Benchmarking using Intel Processor show that disabling mitigations mostly improves all routines {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/intel.html" width=2000px height=900px></iframe>

# Conclusion {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}
  - An unsupervised machine learning-based pipeline that was able to discriminate between major Sars-CoV-2 variants of concern was created
  - For PCA, NetLib performed better than all other single-threaded libraries. IntelMKL appears to be the fastest library for running t-SNE in R, while AMDBliss performed the best in UMAP. No significant results were obtained from the pipeline benchmark, most likely due to the reduced sample size and computation complexity following time constraints.
  - There is evidence that disabling Spectre and Meltdown mitigations could improve the performance of bioinformatics algorithms, however, more data on larger samples are needed for more conclusive results.

# Recommendations {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}
  - Scale up the number of sequences used to generate the plots with the use of HPC
  - More time processing a larger amount of samples may be need to better see statistical significance
  - ISLAP/PVD and other data visualization and collection projects might benefit from interactive and intuitive treemaps
  - Optimized Linear algebra libraries, as we've demonstrated, could benefit Bayesian Techniques
  - PCA and Clustering, and data projection (dim-reduce) could help with Mutations group

# Acknowledgements {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

The group would like to acknowledge the 281 different authors of the SARS-CoV-2 sequences from the Philippines submitted to GISAID. Some of which are from PGC and are in the audience today. 

```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/authors.txt")
p
```

# References {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## References {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

- Research Article:

  - <https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0285719>

- Image Sources:
  - <https://i.ytimg.com/vi/0WDhKCPtbng/maxresdefault.jpg>
  - <https://web.archive.org/web/20180620212658/https://danielmiessler.com/images/Screen-Shot-2018-01-05-at-08.29.00.png>
  - <https://www.docker.com/wp-content/uploads/2022/03/vertical-logo-monochromatic.png>
  - <https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1280px-Git-logo.svg.png>
