---
title: "Performance Evaluation and Optimization of an Unsupervised Machine Learning Workflow for Discriminating Major SARS-CoV-2 Variants in the Philippines"
author: "<b>Project Lead:</b> Mark Joseph Garrovillas, RCh </br> <b>Interns:</b> Brylle Joshua Logro√±o, John Matthew Felices, Yenzy Urson Hebron"
date: "July 28 2023"
institution: "Core Facility for Bioinformatics"
format: 
  revealjs:
    date-format: long
    slide-number: c/t
    width: 1920
    height: 1080
    theme: [default, custom.scss]
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    preview-links: auto
    slide-level: 3
    multiplex: true
    chalkboard: 
      boardmarker-width: 5
    search:
    transition: slide
    background-transition: fade
    transition-speed: slow
title-slide-attributes:
      data-background-image: presentation_files/img/PGCTitleSlideDark.svg
      data-background-size: cover
      data-background-color: "#5E205E"
      transition: slide
      background-transition: fade
      transition-speed: slow
---


# Background and Rationale {background-color="#5E205E" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="fade-in slide-out" transition-speed="slow"}

## Contagious threats underscore our need for effective biosurveillance {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::: {layout-ncol=2}
![](presentation_files/img/pandemic-4.webp){fig-align="center"}

![](presentation_files/img/pandemic-2.jpg){fig-align="left"}
:::
## A good understanding of the foe helps us mount an effective response {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/pandemic-3.webp){fig-align="center"}

## Unsupervised machine learning can aid in identifying and understanding SARS-CoV-2 variants {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::: {layout-ncol=2 layout-valign="center"}
![](presentation_files/img/clusters.png)

![](presentation_files/img/variants.png)
:::

## Chandra et. al (2023) demonstrated the viability of UML in variant analysis {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/journal.pone.0285719.png){fig-align="center"}

[Chandra, R., Bansal, C., Kang, M., Blau, T., Agarwal, V., Singh, P., Wilson, L. O. W., & Vasan, S. (2023). Unsupervised machine learning framework for discriminating major variants of concern during COVID-19. PLOS ONE, 18(5), e0285719. https://doi.org/10.1371/journal.pone.0285719. Reference repository at https://github.com/ai-covariants/analysis-mutations.]{.aside style="color:gray;"}

## UML Techniques to explore are: {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

1. Principal Components Analysis (PCA)
2. t-Distributed Stochastic Neighbor Embedding (t-SNE)
3. Uniform Manifold Approximation (UMAP)
4. Agglomerative Nesting (AGNES)

### PCA performs Linear Dimensionality Reduction
![PCA rotating line visualization.](presentation_files/img/pca-animated.gif){fig-align="center"}

PCA collapses dimensions by building new components that effectively represents the original dataset with maximum variance and minimum error.

### t-SNE and UMAP performs Nonlinear Dimensionality Reduction {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::: {layout-ncol=2 layout-valign="center"}
![t-SNE follows per-point nonlinear distance comparisons.](presentation_files/img/tsne-animated.gif)

![UMAP projects data from a multi-dimensional manifold to 2D space.](presentation_files/img/umap-animated.gif)
:::

t-SNE and UMAP uses statistical and topological techniques to reveal hidden patterns in the data and map data points to lower dimensions.

### AGNES performs hiearchical clustering {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/agnes-animated.gif)

AGNES clusters samples into hierarchies or dendrograms, all towards creating visualizations and treatments that we humans can wrap our heads around.

### With these cutting-edge UML strategies, new insights may be gained that will boost our collective fight against infectious diseases. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

![](presentation_files/img/lab-full-suit.jpg){fig-align="center"}

## **Rationale 1:** Chandra and others' approach may uncover new insights about COVID-19 in the Philippines. Moreover, their approach is ripe for optimization. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::: {layout-ncol=2}
![](presentation_files/img/gear-optimize.png){fig-align="center"}
```{.r code-line-numbers="|6-7|12,14-15|23-27"}
#Import all the required libraries
library(ape)
library(kmer)
library("dplyr")

#set the working directory 
setwd("/Users/chaarvibansal/Desktop/analysis-mutations/data-updated")

#Function computes the kmer of given length 
kmer_df = function(filePath,variant,k){
  kmer = read.FASTA(filePath)
  kmer3 = kcount(kmer, k = k)
  target = rep((variant),length(kmer))
  kmer_df1 = data.frame(kmer3, target)
  return(kmer_df1)
}

#Different lengths of kmers to be used 
kmer_list = list(3,5,7)

for(k in kmer_list)
{
  alpha = kmer_df('alpha.fasta','alpha',k)
  beta = kmer_df('beta.fasta','beta',k)
  gamma = kmer_df('gamma.fasta','gamma',k)
  omicron = kmer_df('omicron.fasta','omicron',k)
  delta = kmer_df('delta.fasta','delta',k)
  
  data = bind_rows(alpha, beta, delta, gamma, omicron)
  outputName = sprintf("covid_kmer_%d.csv",k)
  #store the combined data in a csv file 
  write.csv(data, outputName)
}
```

:::

For instance, hardcoded working directories and variant names hinder reproducibility and prevents scaling up the project to more variants based on the data. Efficiency also suffers from running `kmer_df` once for each variant name.

Among many other reasons, an in-house UML workflow inspired by Chandra et al. (2023) is in order.

## Performance Evaluation and Optimization Rationales


## Rationale 2: Optimized linear algebra libraries are designed to enhance improve performance by faster communication with the hardware layer {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}



## Rationale 3: Patches on processor vulnerabilities such as Meltdown and Spectre have been shown to severely impact performance {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

# Objectives of the Study {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Improvement of a sample pipeline that discriminates between COVID19 variants using an unsupervised machine learning framework {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/journal.pone.0285719.png){.fragment fig-align="center" height=40% width=40%}

## Which linear algebra library implementation (ATLAS, BLISS, NETLIB, OPENBLAS, and IntelMLK) gives the most optimal runtime for the workflow? {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/linear-algebra.jpg){.fragment fig-align="center" height=60% width=60%}

## Does processor vulnerability mitigations (Spectre and Meltdown) significantly affect the runtime of the workflow? {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/spectre_meltdown.png){.fragment fig-align="center" height=60% width=60%}

# Improved unsupervised machine learning pipeline {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Improved Workflow summary {data-="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/pipeline-flowchart.png){.fragment fig-align="center" height=60% width=60%}

## Data Extraction: FASTA and Metadata files were extracted and cleaned from .tar files obtained from the GISAID database. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}


```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/gisaid.fasta", n=10)
p
```


::::

:::: {.column width="50%"}


```{r out.width="900px", out.height="900px"}

library(readr)
library(flextable)

p <- read.csv(file="presentation_files/img/gisaid.csv", nrows=5)
p_table <- flextable(p)
p_table
```


::::

:::::



## Data Preprocessing: A treemap that visualizes the distribution of the samples obtained was generated  {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/reg_var_lin.html" width=1800px height=900px></iframe>

## Data Preprocessing: Sequences and metadata of sampled data were saved for possible use in further downstream analysis {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
![](presentation_files/img/interm.png){.fragment fig-align="center" height=60% width=60%}


## k-mer analysis: k-mer frequencies can be used to represent a specific sequence for downstream profiling {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}


```{r out.width="900px", out.height="450px"}

library(readr)
library(flextable)

p <- read.csv(file="presentation_files/img/kmer_3_100.csv", nrows=10)
p_table <- flextable(p)
p_table
```


## Heatmaps of k-mer tables showed no obvious differences in k-mer frequencies between samples {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}


```{r out.width="1800px", out.height="900px", fig.cap="3-mer heatmap"}

load(file="presentation_files/img/heatmap-3.RData")
p
```


## Dimensional-Reduction: PCA analysis is able to reduce the number of dimensions of the highly dimensional k-mer data set using linear reduction{data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="2D Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="3D Principal Components Plot for k=7"}

load(file="presentation_files/img/3d-pca-7.RData")
p
```

::::

:::::

## Dimensional Reduction: Side plots for PCA were also generated by the pipeline {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Loadings plot for PC1 (k=3)"}

load(file="presentation_files/img/loadings-1-3.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Screeplot for k=3"}

load(file="presentation_files/img/screeplot-3.RData")
p
```

::::

:::: {.column width="100%"}

```{r out.width="800px", out.height="400px", fig.cap="Biplot for k=3"}

load(file="presentation_files/img/biplot-3.RData")
p
```

::::

:::::


## Clustering Visualization: tSNE is a stochastic non-linear method that is able to visualize the highly dimensional k-mer data set in a two-dimensional plot {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="2D tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="3D tSNE Plot for k=7"}

load(file="presentation_files/img/3d-tsne-7.RData")
p
```

::::

:::::

## Clustering-visualization: UMAP is a newer non-linear method that is able to the highly dimensional k-mer data set in a two-dimensional plot {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="2D UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="3D UMAP Plot for k=7"}

load(file="presentation_files/img/3d-umap-7.RData")
p
```

::::

:::::

## Clustering-visualization: AGNES Clustering uses a "bottom-up" approach to cluster similar data points together into a dendrogram {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="Dendrogram grouping sequences by variant"}

load(file="presentation_files/img/clustering-variant-7.RData")
ggp
```

::::

:::: {.column width="50%"}

```{r out.width="900px", out.height="450px", fig.cap="Dendrogram grouping sequences by region"}

load(file="presentation_files/img/clustering-region-7.RData")
ggp
```

::::

:::::

# Insights from the plots generated by the pipeline {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Clustering of the Omicron variant and its subvariants is evident when visualizing k-mer data using PCA. Clustering increases as k increases. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=3"}

load(file="presentation_files/img/2d-pca-3.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=5"}

load(file="presentation_files/img/2d-pca-5.RData")
p
```

::::

:::: {.column width="100%"}

```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```

::::


:::::


## Clustering of variants is more evident when k-mer data is visualized using tSNE compared to PCA. clustering increases as k increases. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=3"}

load(file="presentation_files/img/2d-tsne-3.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=5"}

load(file="presentation_files/img/2d-tsne-5.RData")
p
```

::::

:::: {.column width="100%"}

```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```

::::

:::::

## Clustering of variants further improves when k-mer data is visualized using UMAP. Clustering increases as k increases. {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=3"}

load(file="presentation_files/img/2d-umap-3.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=5"}

load(file="presentation_files/img/2d-umap-5.RData")
p
```

::::

:::: {.column width="100%"}

```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```

::::

:::::

## UMAP (k=7) visualization results in the most distinct clustering between variants {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

::::: {.columns}

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Principal Components Plot for k=7"}

load(file="presentation_files/img/2d-pca-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="tSNE Plot for k=7"}

load(file="presentation_files/img/2d-tsne-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="UMAP Plot for k=7"}

load(file="presentation_files/img/2d-umap-7.RData")
p
```

::::

:::: {.column width="50%"}

```{r out.width="800px", out.height="400px", fig.cap="Dendrogram for k=7"}

load(file="presentation_files/img/clustering-variant-7.RData")
ggp
```

::::

:::::


# Benchmarking of PCA, tSNE, and UMAP using different linear algebra libraries {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"} 

## A statistical analysis pipeline was followed for determining the significance of the results obtained for benchmarking {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

![](presentation_files/img/stats-flowchart.png){.fragment fig-align="center" height=40% width=40%}

## The use of NETLIB linear algebra library results in the best performance for PCA (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/pca-7-benchmark.html" width=1800px height=900px></iframe>

## The use of MKL linear algebra library provides the fastest runtime for t-SNE analysis (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/tsne-7-benchmark.html" width=2000px height=900px></iframe>

## The BLISS linear algebra library results in the fastest runtime for UMAP analysis (k=5) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/umap-5-benchmark.html" width=2000px height=900px></iframe>

# Benchmarking of PCA, tSNE, and UMAP using different processor (AMD & Intel) vulnerability mitigations {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Approach includes Manually Disabling Protections {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
::: {layout-nrow=2}
![Linux: With mitigations.](presentation_files/img/ro3-mitigations-all.png)

![Linux: Without mitigations.](presentation_files/img/ro3-mitigations-none.png)

:::

## Benchmarking using AMD processor show that disabling mitigations can improve some and worsen some routines (k=7) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/amd.html" width=2000px height=900px></iframe>

## Benchmarking using Intel Processor show that disabling mitigations mostly improves all routines {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

<iframe src="presentation_files/img/intel.html" width=2000px height=900px></iframe>

# Conclusion & Recommendations {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Conclusion {data-background="presentation_files/img/PGCSlideLight.svg" transition="slide-in"}
  - An unsupervised machine learning-based pipeline that was able to discriminate between major Sars-CoV-2 variants of concern was created
  - For PCA, NetLib performed better than all other single-threaded libraries. IntelMKL appears to be the fastest library for running t-SNE in R, while AMDBliss performed the best in UMAP. No significant results were obtained from the pipeline benchmark, most likely due to the reduced sample size and computation complexity following time constraints.
  - There is evidence that disabling Spectre and Meltdown mitigations could improve the performance of bioinformatics algorithms, however, more data on larger samples are needed for more conclusive results.

## Recommendations {data-background="presentation_files/img/PGCTitleSlideLight.svg" transition="slide-in"}
  - Scale up the number of sequences used to generate the plots with the use of HPC
  - More time processing a larger amount of samples may be need to better see statistical significance
  - Techniques performed in the study can be applied to other projects
    - ISLAP/PVD and other data visualization and collection projects might benefit from interactive and intuitive treemaps
    - Optimized Linear algebra libraries could benefit studies using Bayesian Techniques
    - Dimensional analysis could help studies looking into mutations of genetic sequences

# Acknowledgements {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## Acknowledgements {data-background="presentation_files/img/PGCSlideLight.svg" transition="slide-in"}

The group would like to acknowledge the 281 different authors of the SARS-CoV-2 sequences from the Philippines submitted to GISAID. Some of which are from PGC and are in the audience today. 


```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/authors.txt")
p
```



# Documentation {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## CRediT (Contribution Roles Taxonomy) {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}
  - Mark Joseph Garrovillas: Conceptualization, Supervision, Project Administration, Resources, Data Curation, Methodology (lead)
  - Brylle Joshua Logro√±o: Data Curation, Formal Analysis (equal), Investigation (equal), Methodology, Software (lead), Validation (equal), Visualization
  - John Matthew Felices: Data Curation, Formal Analysis (equal), Investigation (equal), Methodology, Software, Validation (equal), Visualization (lead)
  - Yenzy Urson Hebron: Data Curation (lead), Formal Analysis (equal), Investigation (equal), Methodology, Software (lead), Validation (equal), Visualization

## R Session Info {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}


```{r out.width="900px", out.height="900px"}

p <- readLines("presentation_files/img/sessionInfo.txt")
p
```


# References {background-color="#447099" data-background="presentation_files/img/PGCTitleSlideDark.svg" transition="slide-in"}

## References {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

- Research Articles:

  - <https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0285719>
  - <https://www.frontiersin.org/articles/10.3389/fbioe.2015.00035/full>
  
- Repositories
  - <https://github.com/ai-covariants/analysis-mutations>
  
- Web Articles
  - <https://meltdownattack.com/>
  - <https://www.microsoft.com/en-us/security/blog/2018/01/09/understanding-the-performance-impact-of-spectre-and-meltdown-mitigations-on-windows-systems/>
  - <https://blog.bioturing.com/2022/01/14/umap-vs-t-sne-single-cell-rna-seq-data-visualization/>
  - <https://blog.bioturing.com/2018/06/14/principal-component-analysis-explained-simply/>
  - <https://plotly.com/r/t-sne-and-umap-projections/>

## References {data-background="presentation_files/img/PGCSlideLight.svg" transition="fade-in slide-out" transition-speed="slow"}

- Image Sources:
  - <https://i.ytimg.com/vi/0WDhKCPtbng/maxresdefault.jpg>
  - <https://web.archive.org/web/20180620212658/https://danielmiessler.com/images/Screen-Shot-2018-01-05-at-08.29.00.png>


